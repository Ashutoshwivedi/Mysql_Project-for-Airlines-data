/* IMPORTANT INSTRUCTIONS FOR LEARNERS
1) DO NOT CHANGE THE ORDER OF COLUMNS.
2) YOUR QUERY SHOULD DISPLAY COLUMNS IN THE SAME ORDER AS MENTIONED IN ALL QUESTIONS.
3) YOU CAN FIND THE ORDER OF COLUMNS IN QUESTION TEMPLATE SECTION OF EACH QUESTION.
4) USE ALIASING AS MENTIONED IN QUESTION TEMPLATE FOR ALL COLUMNS
5) DO NOT CHANGE COLUMN NAMES*/
                   
-- Question 1 (Marks: 3)
-- Objective: Determine, for flights that actually departed later than scheduled, what the departure delay is (in minutes).
-- Calculate the Delay in Departures for Delayed Flights
-- Question Template: Display following columns flight_id, flight_no, departure_delay_minutes
SELECT
    flight_id,
    flight_no,
    TIMESTAMPDIFF(MINUTE, scheduled_departure, actual_departure) AS departure_delay_minutes
FROM
    flights
WHERE
    actual_departure > scheduled_departure;

-- Question 2 (Marks: 3)
-- Objective: Show how frequently each aircraft is used by counting the number of flights operated by each aircraft.
-- List Flights Grouped by Aircraft to See Usage Frequency
-- Question Template: Display following columns aircraft_code, total_flights, avg_flight_duration_minutes

SELECT
    aircraft_code,
    COUNT(*) AS total_flights,
    AVG(TIMESTAMPDIFF(MINUTE, scheduled_departure, scheduled_arrival)) AS avg_flight_duration_minutes
FROM
    flights
GROUP BY
    aircraft_code;

-- Question 3 (Marks: 3)
-- Objective: Aggregate the total revenue generated by each flight by summing up the fare amounts from the ticket_flights table.
-- Calculate Total Revenue per Flight from the Ticket_Flights Table
-- Question Template: Display following columns flight_id, flight_no, total_revenue

SELECT
    f.flight_id,
    f.flight_no,
    SUM(tf.fare) AS total_revenue
FROM
    flights f
JOIN
    ticket_flights tf ON f.flight_id = tf.flight_id
GROUP BY
    f.flight_id, f.flight_no;

-- Question 4 (Marks: 3)
-- Objective: Examine boarding pass data to identify how passengers are being boarded by calculating the average boarding number per flight.
-- Analyze Boarding Numbers per Flight to Detect Patterns in Boarding Pass Allocation
-- Question Template: Display following columns flight_id, avg_boarding_no, total_boarding_passes

-- Calculate average boarding number per flight
SELECT 
    bp.flight_id,
    f.flight_no,
    f.scheduled_departure,
    COUNT(bp.boarding_no) AS total_passengers,
    AVG(bp.boarding_no) AS avg_boarding_no
FROM 
    boarding_passes bp
JOIN 
    flights f ON bp.flight_id = f.flight_id
GROUP BY 
    bp.flight_id, f.flight_no, f.scheduled_departure
ORDER BY 
    avg_boarding_no DESC;

-- Question 5 (Marks: 3)
-- Objective: Identify seat occupancy by comparing the number of boarding passes (occupied seats) to the total seats available on an aircraft.
-- Determine Occupancy per Aircraft
-- Question Template: Display following columns flight_id, flight_no, aircraft_code, total_seats, occupied_seats, occupancy_rate_percentage

WITH FlightSeats AS (
    SELECT
        f.flight_id,
        f.flight_no,
        f.aircraft_code,
        COUNT(s.seat_no) AS total_seats
    FROM
        flights f
    JOIN
        aircrafts a ON f.aircraft_code = a.aircraft_code
    JOIN
        seats s ON f.aircraft_code = s.aircraft_code
    GROUP BY
        f.flight_id, f.flight_no, f.aircraft_code
),
OccupiedSeats AS (
    SELECT
        tf.flight_id,
        COUNT(DISTINCT tf.ticket_no) AS occupied_seats
    FROM
        ticket_flights tf
    GROUP BY
        tf.flight_id
)
SELECT
    fs.flight_id,
    fs.flight_no,
    fs.aircraft_code,
    fs.total_seats,
    COALESCE(os.occupied_seats, 0) AS occupied_seats,
    COALESCE(os.occupied_seats, 0) / fs.total_seats * 100 AS occupancy_rate_percentage
FROM
    FlightSeats fs
LEFT JOIN
    OccupiedSeats os ON fs.flight_id = os.flight_id;

-- Question 6 (Marks: 3)
-- Objective: Identify the three flights that generated the highest revenue based on ticket sales.
-- Top 3 Flights by Revenue
-- Question Template: Display following columns flight_id, flight_no, total_revenue

SELECT
    f.flight_id,
    SUM(tf.amount) AS total_revenue
FROM
    flights f
JOIN
    ticket_flights tf ON f.flight_id = tf.flight_id
GROUP BY
    f.flight_id
ORDER BY
    total_revenue DESC
LIMIT 3;


-- Question 7 (Marks: 3)
-- Objective: Determine the average flight duration for each aircraft model, allowing you to see how flight performance might vary between different models.
-- Average Flight Duration by Aircraft Model
-- Question Template: Display following columns model, avg_duration_minutes

SELECT
    a.model,
    AVG(TIMESTAMPDIFF(MINUTE, f.scheduled_departure, f.scheduled_arrival)) AS average_flight_duration
FROM
    flights f
JOIN
    aircrafts a ON f.aircraft_code = a.aircraft_code
GROUP BY
    a.model;

-- Question 8 (Marks: 3)
-- Objective: Count how many flights depart from each airport to assess airport activity levels.
-- Flight Count per Airport (Departure)
-- Question Template: Display following columns departure_airport, departure_flights

SELECT
    departure_airport,
    COUNT(*) AS departure_flights
FROM
    flights
GROUP BY
    departure_airport;

-- Question 9 (Marks: 3)
-- Objective: Count how many flights depart from and arrive at each airport to assess airport activity levels.
-- Flight Count per Airport (Arrival)
-- Question Template: Display following columns arrival_airport, arrival_flights

SELECT
    arrival_airport,
    COUNT(*) AS arrival_flights
FROM
    flights
GROUP BY
    arrival_airport;

-- Question 10 (Marks: 3)
-- Objective: Analyze trends in bookings over time by grouping bookings by date, counting total bookings, and summing up the revenue.
-- Daily Booking Trends
-- Question Template: Display following columns booking_date, total_bookings, total_revenue

SELECT
    DATE(book_date) AS booking_date,
    COUNT(*) AS total_bookings,
    SUM(total_amount) AS total_revenue
FROM
    bookings
GROUP BY
    booking_date
ORDER BY
    booking_date;

-- Question 11 (Marks: 3)
-- Objective: Identify the most common routes by counting the number of flights for each departureâ€“arrival airport pair.
-- Frequent Routes Analysis
-- Question Template: Display following columns departure_airport, arrival_airports, flights_count

SELECT
    departure_airport,
    arrival_airport,
    COUNT(*) AS flights_count
FROM
    flights
GROUP BY
    departure_airport,
    arrival_airport
ORDER BY
    flights_count DESC;

-- Question 12 (Marks: 3)
-- Objective: Determine how many passengers boarded each flight by counting the boarding passes issued.
-- Passenger Boarding Summary per Flight
-- Question Template: Display following columns flight_id, passengers_boarded

SELECT
    departure_airport,
    arrival_airport,
    COUNT(*) AS flights_count
FROM
    flights
GROUP BY
    departure_airport,
    arrival_airport
ORDER BY
    flights_count DESC;

-- Question 13 (Marks: 3)
-- Objective: Assess the boarding process by calculating the average boarding order number for each flight, which may indicate the boarding strategy or sequence.
-- Average Boarding Number per Flight
-- Question Template: Display following columns flight_id, avg_boarding_no

-- Average boarding order number per flight
SELECT 
    bp.flight_id,
    f.flight_no,
    f.scheduled_departure,
    AVG(bp.boarding_no) AS average_boarding_order
FROM 
    boarding_passes bp
JOIN 
    flights f ON bp.flight_id = f.flight_id
GROUP BY 
    bp.flight_id, f.flight_no, f.scheduled_departure
ORDER BY 
    average_boarding_order ASC;


-- Question 14 (Marks: 3)
-- Objective: Aggregate the total amount spent by each passenger across all their tickets by joining the tickets and ticket_flights tables.
-- Total Spend per Passenger
-- Question Template: Display following columns passenger_id, total_tickets, total_spent

SELECT
    t.passenger_id,
    COUNT(*) AS total_tickets,
    SUM(tf.amount) AS total_spent
FROM
    tickets t
JOIN
    ticket_flights tf ON t.ticket_no = tf.ticket_no
GROUP BY
    t.passenger_id
ORDER BY
    total_spent DESC;

-- Question 15 (Marks: 3)
-- Objective: Analyze the distribution of ticket volume and revenue across different fare conditions.
-- Fare?Condition Distribution
-- Question Template: Display following columns fare_conditions, tickets_sold, total_revenue

-- Unable to provide a complete solution due to the absence of "fare condition" data in the provided tables.
-- The following SQL gives total ticket volume and total revenue

-- Unable to provide a complete solution due to the absence of "fare condition" data in the provided tables.
-- The following SQL gives total ticket volume and total revenue

SELECT
    'N/A' AS fare_conditions,  -- Since fare_conditions are not available, fill with 'N/A'
    COUNT(t.ticket_no) AS tickets_sold,
    SUM(b.total_amount) AS total_revenue
FROM
    airlines_data.tickets t
JOIN
    airlines_data.bookings b ON t.book_ref = b.book_ref
GROUP BY
    1; -- Group by the first selected column ('N/A')


-- Question 16 (Marks: 3)
-- Objective: Aggregate total revenue generated by each departure?arrival airport route.
-- Revenue by Route
-- Question Template: Display following columns departure_airport, arrival_airport, total_route_revenue

SELECT
    f.departure_airport,
    f.arrival_airport,
    SUM(tf.amount) AS total_route_revenue
FROM
    flights f
JOIN
    ticket_flights tf ON f.flight_id = tf.flight_id
GROUP BY
    f.departure_airport,
    f.arrival_airport
ORDER BY
    total_route_revenue DESC;

-- Question 17 (Marks: 2)
-- Objective: Identify the top 5 booking hours of the day by volume of bookings
-- Peak Booking Hours
-- Question Template: Display following columns booking_hour, bookings_count

SELECT
    HOUR(book_date) AS booking_hour,
    COUNT(*) AS bookings_count
FROM
    bookings
GROUP BY
    booking_hour
ORDER BY
    bookings_count DESC
LIMIT 5;

